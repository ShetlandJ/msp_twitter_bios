// fs is part of node and allows me to access the files on my computer
const fs = require('fs')
// csv-parse is a package that I've installed to help me read CSV files.
// You can do this without this package
var parse = require('csv-parse')

// This object will help us tally the total number of
// MPs for each party and count when an MP mentions
// their party.
const map = {
    'Conservative MSP': {
        total: 0,
        count: 0
    },
    'Labour MSP': {
        total: 0,
        count: 0,
    },
    'Scottish National Party MSP': {
        total: 0,
        count: 0,
    },
}

// mps_and_bios.csv is a file generated by the other folder in this project
// first we need to read the file
fs.readFile('msp_results1.csv', (err, fileData) => {

    // then we use our imported package csv-parse (which we imported as 'parse')
    // to get the rows from the spreadsheet
    parse(fileData, { columns: false, trim: true }, async (err, rows) => {

        // Once we have the rows, we need to go through each one start calculating.
        rows.forEach(row => {
            // The output row looks something like this: ['Boris Johnson', 'Conservative', 'TRUE', 'his bio here']
            // Arrays as zero indexed, meaning you count up from 0 rather than 1, so
            // the party name is row[ index 1 ], or row[1].
            const partyName = row[1];

            // partyName now will equal a string value like 'Liberal Democrat' or 'Labour'
            // so we need to check if that is present on the above object.
            if (map.hasOwnProperty(partyName)) {
                // If it's present, add to that party's total
                map[partyName].total++

                // Yeah it seemed to save a true value as 'TRUE", normally you'd have it
                // stored as a boolean true, not the string 'TRUE' and then I could just check
                // if (row[2]) {} but at this level there really isn't enough of a performance hit
                // for me to worry so I have decided to leave it.
                if (row[2] === 'TRUE') {
                    // If the 3rd index, [2], is 'TRUE' and not 'FALSE', we know that
                    // the MP has mentioned their party in their biography
                    map[partyName].count++
                }
            } else {
                // This is a catch for me to check parties I've missed from my map.
                // I really was mainly concerned about the 3 big parties, Labour,
                // Conservatives and SNP.
                console.log("missing is:" + partyName);
            }
        })

        // After everything's completed, log out the mapped object which is
        // the above object but with the numbers incremented.
        console.log(map);
    })

});